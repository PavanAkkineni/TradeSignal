// SIMPLIFIED JENKINSFILE - For Learning/Testing
// This version skips advanced features and focuses on core functionality

pipeline {
    agent any
    
    environment {
        // TODO: Replace with YOUR Docker Hub username
        DOCKER_HUB_USERNAME = 'YOUR_DOCKERHUB_USERNAME'
        DOCKER_IMAGE = "${DOCKER_HUB_USERNAME}/trading-analytics-platform"
        DOCKER_TAG = "${BUILD_NUMBER}"
    }
    
    stages {
        stage('1. Checkout Code') {
            steps {
                echo 'üì• Pulling code from GitHub...'
                checkout scm
            }
        }
        
        stage('2. Verify Python') {
            steps {
                echo 'üêç Checking Python installation...'
                bat 'python --version'
                bat 'pip --version'
            }
        }
        
        stage('3. Install Dependencies') {
            steps {
                echo 'üì¶ Installing Python packages...'
                bat '''
                    pip install -r requirements.txt
                '''
            }
        }
        
        stage('4. Quick Test') {
            steps {
                echo 'üß™ Running quick import test...'
                bat '''
                    python -c "from app.main import app; print('‚úÖ App imports successfully!')"
                '''
            }
        }
        
        stage('5. Build Docker Image') {
            steps {
                echo 'üê≥ Building Docker image...'
                script {
                    docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}")
                    docker.build("${DOCKER_IMAGE}:latest")
                }
            }
        }
        
        stage('6. Test Docker Image') {
            steps {
                echo 'üß™ Testing Docker container...'
                bat '''
                    docker run -d --name test-container -p 8001:8000 %DOCKER_IMAGE%:%DOCKER_TAG%
                    timeout /t 30 /nobreak
                    curl http://localhost:8001/api/health
                    docker stop test-container
                    docker rm test-container
                '''
            }
        }
        
        stage('7. Push to Docker Hub') {
            steps {
                echo 'üì§ Pushing image to Docker Hub...'
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-credentials') {
                        def image = docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}")
                        image.push()
                        image.push('latest')
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo '‚úÖ Pipeline completed successfully!'
            echo "üéâ Your Docker image is available at: ${DOCKER_IMAGE}:${DOCKER_TAG}"
        }
        failure {
            echo '‚ùå Pipeline failed! Check the logs above.'
        }
        always {
            echo 'üßπ Cleaning up...'
            bat 'docker system prune -f || echo "Cleanup done"'
        }
    }
}
